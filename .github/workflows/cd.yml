name: CD for FastFood-API

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Realizando o Login no DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Buildando a imagem e enviando para o dockerhub
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/spring-app:latest

      - name: Configurando as credenciais da AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Atualizando o kubeconfig no EKS
        uses: aws-actions/eks-update-kubeconfig@v2
        with:
          cluster-name: fastfood-cluster
          region: us-east-1

      # Step 6: Executando o K8S no cluster EKS
      - name: Executando o K8S no cluster EKS
        run: |
          kubectl apply -f fastfood-secret.yaml
#          kubectl apply -f fastfood-db-statefulset.yaml
#          kubectl apply -f fastfood-db-service.yaml
          kubectl apply -f fastfood-api-deployment.yaml
          kubectl apply -f fastfood-api-service.yaml
          kubectl apply -f payment-api-deployment.yaml
          kubectl apply -f payment-api-service.yaml

      # Step 7: Verificando se os deployments foram criados
      - name: Listando os Deployments
        run: |
          echo "Listing Deployments:"
          kubectl get deployments

      # Step 7: Verificando se os services foram criados
      - name: Listando os Services
        run: |
          echo "Listing Services:"
          kubectl get deployments
